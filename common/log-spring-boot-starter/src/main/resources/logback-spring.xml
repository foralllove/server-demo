<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>${APP_NAME}</contextName>
    <springProperty name="APP_NAME" scope="context" source="spring.application.name"/>
    <springProperty name="LOG_FILE" scope="context" source="logging.file"
                    defaultValue="../logs/${APP_NAME}"/>
    <springProperty name="MAX_FILE_SIZE" scope="context" source="logback.filesize" defaultValue="50MB"/>
    <springProperty name="MAX_DAY" scope="context" source="logback.filemaxday" defaultValue="7"/>
    <springProperty name="IP" scope="context" source="spring.cloud.client.ip-address" defaultValue="0.0.0.0"/>
    <springProperty name="Port" scope="context" source="server.port" defaultValue="0000"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="[${APP_NAME}:${IP}:${Port}] %d{yyyy-MM-dd HH:mm:ss.SSS} %clr(%level){blue} %clr(${PID}){magenta}
              %clr([%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}]){yellow} %clr([%thread]){orange} %clr(%-40.40logger{39}){cyan}
              %L %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <property name="LOG_PATTERN_NO_COLOR"
              value="[${APP_NAME}:${IP}:${Port}] %d{yyyy-MM-dd HH:mm:ss.SSS} %level ${PID} [%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}]
               [%thread] %-40.40logger{39} [%L] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- 控制台日志 -->
    <appender name="StdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>true</withJansi>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 全日志文件 -->
    <appender name="FileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}/${APP_NAME}.log</file>

        <encoder>
            <pattern>${LOG_PATTERN_NO_COLOR}</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <!-- 基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--保留时间,单位:天-->
            <maxHistory>${MAX_DAY}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

    </appender>

    <!-- ERROR日志文件 -->
    <appender name="ErrorFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 设置日志文件名称和路径 -->
        <file>${LOG_FILE}/${APP_NAME}_error.log</file>

        <!-- 设置日志输出格式和编码 -->
        <encoder>
            <pattern>${LOG_PATTERN_NO_COLOR}</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <!-- 基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}/${APP_NAME}_error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--保留时间,单位:天-->
            <maxHistory>${MAX_DAY}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 设置日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 异步输出日志文件(async) -->
    <appender name="file_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="FileAppender"/>
    </appender>

    <appender name="error_file_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="ErrorFileAppender"/>
    </appender>

    <!-- 日志级别总共有TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
    <root level="INFO">
        <appender-ref ref="StdoutAppender"/>
        <appender-ref ref="file_async"/>
        <appender-ref ref="error_file_async"/>
    </root>
</configuration>
